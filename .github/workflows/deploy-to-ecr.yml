name: deployment-to-ecr
on:
  push:
    branches: main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python3 -m pip install --no-cache-dir --upgrade pip
          python3 -m pip install --no-cache-dir -r requirements.txt

      - name: Format code
        run: |
          python3 -m black src fetch_tenders.py

      - name: Lint with pylint
        run: |
          python3 -m pylint --disable=R,C,E0401,W1203,W1201 src fetch_tenders.py

      - name: Tidy imports
        run: |
          python3 -m isort src fetch_tenders.py

      # - name: Test with pytest
      #   run: |
      #     python3 -m pytest -vv

      - name: Lint with hadolint
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: dockerfile

      - name: Configure AWS credentials for ireland
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR (Ireland)
        id: login-ecr-ireland
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build --platform linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f ./dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          aws lambda update-function-code --function-name arn:aws:lambda:eu-west-1:335923355498:function:tender-scraper --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:latest
